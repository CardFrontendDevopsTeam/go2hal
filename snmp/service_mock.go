// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_snmp is a generated GoMock package.
package snmp

import (
	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// SendSNMPMessage mocks base method
func (m *MockService) SendSNMPMessage(ctx context.Context, chat uint32) {
	m.ctrl.Call(m, "SendSNMPMessage", ctx, chat)
}

// SendSNMPMessage indicates an expected call of SendSNMPMessage
func (mr *MockServiceMockRecorder) SendSNMPMessage(ctx, chat interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendSNMPMessage", reflect.TypeOf((*MockService)(nil).SendSNMPMessage), ctx, chat)
}
